name: CI/CD Pipline to AWS

on:
    push:
        branches:
            - main

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest


        # Define environment variables
        env:
            AWS_REGION: ${{ secrets.AWS_REGION }}
            ECR_REPOSITORY_NAME: devops/my-app
            ECR_REPOSITORY_URL: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME }}
        
        steps:
            - name: Checkout code
              uses: actions/checkout@v3
            
            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ${{ secrets.AWS_REGION }} 
            
            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1
            
            - name: Build and push Docker image
              id: build-image
              env:
                ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                IMAGE_TAG: ${{ github.sha }}
              run: |
                docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_NAME:latest .
                docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_NAME:$IMAGE_TAG .
                docker push $ECR_REGISTRY/$ECR_REPOSITORY_NAME:latest
                docker push $ECR_REGISTRY/$ECR_REPOSITORY_NAME:$IMAGE_TAG
            
            - name: Deploy to EC2 via SSH (without action)
              env:
                ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
              run: |
                # Настройка SSH-ключа и добавление хоста в known_hosts
                mkdir -p ~/.ssh/
                echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/kp1.pem
                chmod 600 ~/.ssh/kp1.pem
                ssh-keyscan ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

                # Подключение по SSH и выполнение команд развертывания
                ssh -i ~/.ssh/kp1.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
                    echo "Deployment started..."
                    
                    # Остановка и удаление старого контейнера (если есть)
                    docker stop my-app-container || true
                    docker rm my-app-container || true
                    
                    # Получение последнего образа из ECR
                    docker pull ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY_NAME }}:latest
                    
                    # Запуск нового контейнера
                    docker run -d \
                    --name my-app-container \
                    -p 8080:8080 \
                    ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY_NAME }}:latest
                    
                    echo "Deployment finished successfully!"
                EOF
